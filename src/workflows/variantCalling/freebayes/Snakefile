"""
#edited workflow

"""
import json, os, inspect, sys

ruleDir = os.path.dirname(inspect.getframeinfo(inspect.currentframe()).filename) + "/../../../rules/"

# Add qualityControl to pythonpath

sys.path.append(os.path.dirname(inspect.getframeinfo(inspect.currentframe()).filename)+ "/../../../")

with open("config.json") as f:
    CONFIG = json.load(f)

include: ruleDir + "utils/Unzip.rules"
include: ruleDir + "utils/ExtensionChanger.rules"
include: ruleDir + "mappers/Bwa.rules"
include: ruleDir + "fastqProcessing/Trimmomatic.rules"
include: ruleDir + "mappers/PicardTools.rules"
include: ruleDir + "mappers/Samtools.rules"
include: ruleDir + "variantCalling/Freebayes.rules"

#rule all:
#    input: "report/report.xpdf"


"""Now see if we have any command line overrides: """
for key in config:
    CONFIG[key] = config[key]

#SAMPLES,=glob_wildcards("raw_reads/{sample}_1.fastq.gz")
SAMPLES=CONFIG["samples"]


rule all:
    #input: expand("processed/trim.{samples}.fastq", samples=SAMPLES)
    #input: expand("mapped/bwaMem.{samples}.sam", samples=SAMPLES)
    #input: expand("processedbam/RG.noDup.sorted.bwaMem.{samples}.bam", samples=SAMPLES)
    #input: expand("variantCalling/fb.{sample}.vcf", samples=SAMPLES)
    input: expand("variantCalling/fb.RG.noDup.sorted.bwaMem.{samples}.vcf", samples=SAMPLES)
                                    #RG.noDup.sorted.bwaMem.STsub_sample1.bam

#DATASETS,=glob_wildcards("./processed/{sample}.fastq")
#rule all:
#	input: "mapped/bwaMem.{prefix}.sam"
#	input: expand("./mapped/bwaMem.{sample}.sam", dataset=DATASETS)
#	input: CONFIG["refGenome"] + ".pac"


