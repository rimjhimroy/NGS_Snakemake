"""
@version: 0.1

Run ReAS repeat discovery tool

Required programs:
* ReAS
* MUSCLE
* BLASTN (from BLAST-suite)
* dustmasker (from BLAST-suite)

"""

import os, subprocess
import configparser

__author__ = "Jan van Haarst"
__email__ = "jan.vanhaarst@wur.nl"


# Download and install samtools
rule reas_installation:
    output: CONFIG["executables"]["reas"] + 'reas_all.pl'
    params : dir = strip_path_level(CONFIG['executables']['reas'],2)
    threads : 12
    shell:
        "TEMPDIR=`mktemp -d`;"
        "cd $TEMPDIR;"
        "git clone " +CONFIG["executable_sources"]['reas_URL'] + " && "
        "cd reas && "
        "mkdir bin && "
        "cd code && "
        "make -j {threads} && "
        "make install && "
        "mv -v ../bin {params.dir} &&"
        "touch {output} && "
        "cd - && "
        "cd dust && "
        "make && make install && "
        "cd / && rm -rf $TEMPDIR;"

rule reas:
    input:
        reads = CONFIG["reads"],
        REAS = rules.reas_installation.output,
        PATH = strip_path_level(CONFIG['executables']['reas'],1)
    output: "consensus.fa"
    message: """Run ReAS on unpaired data"""
    threads: 8
    params:
        options = CONFIG["reas"]["options"]
    shell:
        """
        if conda info --envs | grep '^reas'
        then
            echo "Conda environment exists"
        else
            conda create --use-index-cache --yes --name reas muscle blast;
        fi
        source activate reas
        export PATH=$PATH:{input.PATH}
        {input.REAS} {params.options} -pa {threads} -read {input.reads} -output {output}
        source deactivate;
        """
