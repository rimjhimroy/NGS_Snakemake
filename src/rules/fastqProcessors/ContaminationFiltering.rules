"""
@version: 0.1

Filter reads with Bowtie2 against a contamination genome

Required programs:
* bowtie2


"""
import os, subprocess
import configparser

__author__ = "Jan van Haarst"
__email__ = "jan.vanhaarst@wur.nl"

rule filterPaired:
    input:
        forward = "reads/{sample}/{library}/{replicate}/{name}.fastq.gz",
        reference = CONFIG['contaminationGenome'],
        index = CONFIG['contaminationGenome']+".1.bt2",
        BOWTIE2=rules.bowtie_installation.output
    output:
        forward = "filtered/{sample}/{library}/{replicate}/{name}.fastq.gz"
    message: """Filter paired data"""
    log: "{sample}.filter.log"
    threads: 12
    params:
        options = "--time"
    shell:
        """
        reverse=$(echo {input.forward} | sed 's/_R1_/_R2_/')
        reverse_filtered=$(echo {output.forward} | sed 's/_R1_/_R2_/')
        {input.BOWTIE2} \
        --threads {threads} \
        -x {input.reference} \
        --un-conc-gz {output.forward}_tmp_unmappped.fastq.gz \
        -1 {input.forward} -2 ${{reverse}} \
        -S /dev/null \
        {params.options}
        mv {output.forward}_tmp_unmappped.fastq.1.gz {output.forward}
        mv {output.forward}_tmp_unmappped.fastq.2.gz ${{reverse_filtered}}
        """
