"""
@version:0.1
@author: Jetse

The Samtools module contains all rules for manipulating bam files with samtools.

A configuration file like the following is expected in a global CONFIG variable:
{
    "mapping":{
        "referenceGenome":"/path/to/referenceGenome.fasta
    }
}
"""
import subprocess, re

# Download and install samtools
rule samtools_installation:
    output: CONFIG["samtools"]["path"] + 'samtools'
    shell:
        "TEMPDIR=`mktemp -d`;"
        "cd $TEMPDIR;"
        "git clone " +CONFIG['samtools']['URL'] + " && "
        "git clone " +CONFIG['htslib']['URL'] + " && "
        "cd samtools && "
        "make && "
        "mv samtools {output} &&"
        "touch {output} && "
        "cd / && rm -rf $TEMPDIR;"

rule samToBam:
    input:
        SAMTOOLS=rules.samtools_installation.output,
        BAM="mapped/{sample}.sam"
    output: "mapped/{sample}.bam"
    shell: "{input.SAMTOOLS} view -bS {input.BAM} > {output}"

rule indexBam:
    input:
        SAMTOOLS=rules.samtools_installation.output,
        BAM="{prefix}.bam"
    output: "{prefix}.bam.bai"
    shell: "{input.SAMTOOLS} index {input.BAM}"

rule sortBam:
    input:
        SAMTOOLS=rules.samtools_installation.output,
        BAM="mapped/{sample}.bam"
    output: "mapped/sorted.{sample}.bam"
    shell: "{input.SAMTOOLS} sort -o {input.BAM} {output} > {output}"

rule mergeBam:
    input:
        SAMTOOLS=rules.samtools_installation.output,
        BAM='expand(",".join("/processedbam/{sample}.bam", sample=SAMPLES)'
    output: "processedbam/allMerged.bam"
    shell: "{input.SAMTOOLS} merge {output} {input.BAM}"

rule addMdTag:
    input:
        SAMTOOLS=rules.samtools_installation.output,
        BAM="mapped/{sample}.bam",
        REFERENCE=CONFIG["refGenome"]
    output: "mapped/md.{sample}.bam"
    shell: "{input.SAMTOOLS} calmd {input.BAM} {input.REFERENCE} > {output}"

rule faidX:
    input:
        SAMTOOLS=rules.samtools_installation.output,
        FASTA="{prefix}.fasta"
    output: "{prefix}.fasta.fai"
    shell: "{input.SAMTOOLS} faidx {input.FASTA}"
