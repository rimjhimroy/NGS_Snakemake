"""

Required JSON:
{
    "picardTools":{
        "path":"/path/to/picardtools"
    }
}

"""
import subprocess
PICARD_VERSION = subprocess.Popen(CONFIG["picardTools"]["path"] + " AddOrReplaceReadGroups --version", shell=True, stderr=subprocess.PIPE).stderr.read().decode("utf-8").split("(")[0]

# Download and install picardtools
rule picardtools_installation:
    output: CONFIG["picardTools"]["path"]
    shell:
        "TEMPDIR=`mktemp -d`;"
        "cd $TEMPDIR;"
        "wget "+CONFIG['picardTools']['URL']+" -O picard.zip && "
        "unzip picard.zip && "
        "rm picard.zip && "
        "mv  mv picard*/* " + CONFIG["picardTools"]["path"] + " &&"
        "touch " + CONFIG["picardTools"]["path"]+ "/* && "
        "rmdir picard* && "
        "cd / && rmdir $TEMPDIR;"

rule addHeaderline:
    input:
        PICARD=rules.picardtools_installation.output,
        BAM="mapped/{sample}.bam"
    params:
        path=CONFIG["picardTools"]["path"]
    output: "mapped/headered.{sample}.bam"
    version: PICARD_VERSION
    shell: "java -jar {input.PICARD} AddOrReplaceReadGroups INPUT={input.BAM} VALIDATION_STRINGENCY=SILENT OUTPUT={output} LB={wildcards.sample} PL=illumina PU=lane SM={wildcards.sample}"

rule removeDuplicates:
    input:
        PICARD=rules.picardtools_installation.output,
        BAM="mapped/sorted.{sample}.bam"
    output: "mapped/noDup.sorted.{sample}.bam"
    params:
        path=CONFIG["picardTools"]["path"]
    version: PICARD_VERSION
    shell: "java -jar {input.PICARD} MarkDuplicates INPUT={input.BAM} ASSUME_SORTED=true VALIDATION_STRINGENCY=SILENT OUTPUT={output} REMOVE_DUPLICATES=true METRICS_FILE=/dev/null"

rule AddRGtag:
    input:
        PICARD=rules.picardtools_installation.output,
        BAM="mapped/{sample}.bam"
    output: "processedbam/RG.{sample}.bam"
    params:
        path=CONFIG["picardTools"]["path"]
    version: PICARD_VERSION
    shell: "java -jar {input.PICARD} AddOrReplaceReadGroups INPUT={input.BAM} RGID={input} RGLB=ga RGPL=illumina RGPU=unit RGSM={input.BAM} OUTPUT={output}"

