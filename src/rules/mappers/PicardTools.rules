"""

Required JSON:
{
    "picardTools":{
        "path":"/path/to/picardtools"
    }
}

"""
import subprocess

# Download and install picardtools
rule picardtools_installation:
    #output: CONFIG["picardTools"]["path"] + "picard.jar"
    output: CONFIG["executables"]["picardTools"] + "picard.jar"
    shell:
        "TEMPDIR=`mktemp -d`;"
        "cd $TEMPDIR;"
        "wget "+CONFIG["executable_sources"]['picardTools_URL'] +" -O picard.zip && "
        "unzip picard.zip && "
        "rm picard.zip && "
        "mv picard*/* " + CONFIG["executables"]["picardTools"] + " &&"
        "touch " + CONFIG["executables"]["picardTools"] + "/* && "
        "rmdir picard* && "
        "cd / && rmdir $TEMPDIR;"

rule addHeaderline:
    input:
        PICARD=rules.picardtools_installation.output,
        BAM="mapped/{sample}.bam"
    params:
        path=CONFIG["executables"]["picardTools"]
    output: "mapped/headered.{sample}.bam"
    shell: "java -jar {input.PICARD} AddOrReplaceReadGroups INPUT={input.BAM} VALIDATION_STRINGENCY=SILENT OUTPUT={output} LB={wildcards.sample} PL=illumina PU=lane SM={wildcards.sample}"

rule removeDuplicates:
    input:
        PICARD=rules.picardtools_installation.output,
        BAM="mapped/{sample}.bam"
    output: temp("mapped/noDup.{sample}.bam")
    params:
        path=CONFIG["executables"]["picardTools"]
    shell: "java -jar {input.PICARD} MarkDuplicates INPUT={input.BAM} ASSUME_SORTED=true VALIDATION_STRINGENCY=SILENT OUTPUT={output} REMOVE_DUPLICATES=true METRICS_FILE=/dev/null"

#missing input : processedbam/noDup.merged.sort.ST_sample1.bam
rule AddRGtag:
    input:
        PICARD=rules.picardtools_installation.output,
        BAM="mapped/{sample}.bam"
    output: "processedbam/RG.{sample}.bam"
    params:
        path=CONFIG["executables"]["picardTools"]
    shell: "java -jar {input.PICARD} AddOrReplaceReadGroups INPUT={input.BAM} RGID={input.BAM} RGLB=ga RGPL=illumina RGPU=unit RGSM={input.BAM} OUTPUT={output}"

