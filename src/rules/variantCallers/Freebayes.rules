"""
@author: Martijn/Danny
@version: 0.1

The minimum JSON for executing the Haplotyping:
{
    "freebayes":{
          "path": "/media/bulk_01/programs/freebayes/bin/",
          "optionalOpts":{
               "--ploidy":4,
               "--read-indel-limit":3,
               "--min-mapping-quality":30,
               "--min-base-quality":13,
               "--theta":0.01,
               "--min-alternate-count":4,
               "--min-alternate-fraction":0.15
           }
    "vcfUtils":{
        "path":"/path/to/vcfUtils.pl",
        "optionalOpts":""
        },
    "mapping":{
        "referenceGenome":"/path/to/referenceGenome.fasta"
    }
}




"""
from collections import Iterable, namedtuple
import subprocess, re
#FREEBAYES_VERSION = re.compile("Version:(.*?)\n").search(subprocess.Popen(CONFIG["freebayes"]["path"] + "freebayes", shell=True, stderr=subprocess.PIPE).stderr.read().decode("utf-8")).group(1).strip()
items = []
items.append("--ploidy %s"%(CONFIG["freebayes"]["optionalOpts"]["--ploidy"]))
items.append("--read-indel-limit %s"%(CONFIG["freebayes"]["optionalOpts"]["--read-indel-limit"]))
items.append("--min-mapping-quality %s"%(CONFIG["freebayes"]["optionalOpts"]["--min-mapping-quality"]))
items.append("--min-base-quality %s"%(CONFIG["freebayes"]["optionalOpts"]["--min-base-quality"]))
items.append("--theta %s"%(CONFIG["freebayes"]["optionalOpts"]["--theta"]))
items.append("--min-alternate-count %s"%(CONFIG["freebayes"]["optionalOpts"]["--min-alternate-count"]))
items.append("--min-alternate-fraction %s"%(CONFIG["freebayes"]["optionalOpts"]["--min-alternate-fraction"]))

param_str = " ".join(items)
parameters = param_str

rule freebayes_installation:
    output: CONFIG["freebayes"]["path"] + 'freebayes'
    threads: 20
    shell:
        "TEMPDIR=`mktemp -d`;"
        "cd $TEMPDIR;"
        "git clone --recursive " + CONFIG['freebayes']['URL'] +  " && "
        "cd freebayes && "
        "make -j {threads} && "
        "mv bin/freebayes bin/bamleftalign " + CONFIG["freebayes"]["path"] + " &&"
        "touch {output} && "
        "cd / && rm -rf $TEMPDIR;"

rule FreebayesCalling:
    input:
        FREEBAYES=rules.freebayes_installation.output,
        BAM = "processedbam/{prefix}.bam",
        BAI = "processedbam/{prefix}.bam.bai",
        REFGENOME = CONFIG["refGenome"],
        REFGENOMEINDEX = CONFIG["refGenome"] + '.fai'
    output: "variantCalling/fb.{prefix}.vcf"
    #version: FREEBAYES_VERSION
    shell: ("{input.FREEBAYES} -f {input.REFGENOME} -b {input.BAM} -v {output} {parameters} > {output}")

"""
#TODO: work on SNPfiltering

rule bcftoolsView:
    input: "variantCalling/{prefix}.mpileup"
    output: "variantCalling/{prefix}.vcf"
    #version: SAMTOOLS_VERSION
    shell: "bcftools view -vcg {input[0]} > {output[0]}"

rule filterVcf:
    input:
       inFile = "{prefix}.vcf",
       path = CONFIG["freebayes"]["path"]
    output: "variantCalling/filtered.{prefix}.vcf"
    params:
        path=CONFIG["options"]["vcfUtils"]["path"],
        optionalOpts=CONFIG["options"]["vcfUtils"]["optionalOpts"]
    shell: "perl {params.path} varFilter {params.optionalOpts} {input[0]} > {output[0]}"
"""
